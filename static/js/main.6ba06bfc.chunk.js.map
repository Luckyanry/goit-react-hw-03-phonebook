{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/SingleContact/SingleContact.js","components/ContactList/ContactList.js","components/App/App.js","index.js"],"names":["ContactForm","formInitialState","name","number","state","inputHandler","target","value","setState","submitHandler","e","preventDefault","props","contacts","find","contact","alert","reset","singleContact","id","uuidv4","addContact","this","className","onSubmit","type","placeholder","onChange","Component","Filter","handleFilter","filter","SingleContact","deleteContact","onClick","ContactList","filteredContacts","map","key","App","getFilteredContact","toLowerCase","includes","contactObj","prev","savedContacts","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ba06bfc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./ContactForm.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\n\nclass ContactForm extends Component {\n  formInitialState = {\n    name: \"\",\n    number: \"\",\n  };\n\n  state = {\n    ...this.formInitialState,\n  };\n\n  inputHandler = ({ target }) => {\n    const { value, name } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submitHandler = (e) => {\n    const { name, number } = this.state;\n    e.preventDefault();\n\n    const { contacts } = this.props.state;\n    const isExists = contacts.find((contact) => contact.name === name);\n    if (isExists) {\n      alert(`${name} is already exist in contacts!`);\n      return this.reset();\n    }\n\n    const singleContact = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n\n    this.props.addContact(singleContact);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ ...this.formInitialState });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className=\"ContactsForm\" onSubmit={this.submitHandler}>\n        <label className=\"InputName\">\n          Name\n          <br />\n          <input\n            className=\"InputForm\"\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Add name\"\n            value={name}\n            onChange={this.inputHandler}\n          />\n        </label>\n        <br />\n        <label className=\"InputName\">\n          Number\n          <br />\n          <input\n            className=\"InputForm\"\n            type=\"text\"\n            name=\"number\"\n            placeholder=\"Add phone number\"\n            value={number}\n            onChange={this.inputHandler}\n          />\n        </label>\n        <br />\n        <button type=\"submit\">Create contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  state: PropTypes.shape({\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n        id: PropTypes.string,\n        namber: PropTypes.string,\n      })\n    ),\n    filter: PropTypes.string,\n  }).isRequired,\n  addContact: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport \"./Filter.css\";\nimport PropTypes from \"prop-types\";\n\nconst Filter = ({ state, handleFilter }) => {\n  const { filter } = state;\n  return (\n    <label className=\"InputName\">\n      Find contacts by name\n      <br />\n      <input\n        className=\"FilterForm\"\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Find contact\"\n        value={filter}\n        onChange={handleFilter}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  state: PropTypes.shape({\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n        id: PropTypes.string,\n        namber: PropTypes.string,\n      })\n    ),\n    filter: PropTypes.string,\n  }).isRequired,\n  handleFilter: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport \"./SingleContact.css\";\nimport PropTypes from \"prop-types\";\n\nconst SingleContact = ({ contact, deleteContact }) => {\n  const { name, id, number } = contact;\n  return (\n    <li className=\"Contact\">\n      {name}: {number}\n      <button className=\"DelBtn\" type=\"button\" id={id} onClick={deleteContact}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default SingleContact;\n\nSingleContact.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string,\n    id: PropTypes.string,\n    namber: PropTypes.string,\n  }).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport SingleContact from \"../SingleContact/SingleContact\";\nimport PropTypes from \"prop-types\";\n\nconst ContactList = ({ filteredContacts, deleteContact }) => {\n  return (\n    <ul>\n      {filteredContacts.map((contact, id) => {\n        return (\n          <SingleContact\n            key={id}\n            contact={contact}\n            deleteContact={deleteContact}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  filteredContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      id: PropTypes.string,\n      namber: PropTypes.string,\n    })\n  ).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport Filter from \"../Filter/Filter\";\nimport ContactList from \"../ContactList/ContactList\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const savedContacts = localStorage.getItem(\"contacts\");\n    if (savedContacts) {\n      this.setState({\n        contacts: JSON.parse(savedContacts),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    }\n  }\n\n  handleFilter = ({ target }) => {\n    const { value, name } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  getFilteredContact = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  addContact = (contactObj) => {\n    this.setState((prev) => ({\n      contacts: [...prev.contacts, contactObj],\n    }));\n  };\n\n  deleteContact = ({ target }) => {\n    const { id } = target;\n    this.setState((prev) => ({\n      contacts: prev.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  render() {\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm state={this.state} addContact={this.addContact} />\n\n        {this.state.contacts.length > 0 ? (\n          <h2>Contacts</h2>\n        ) : (\n          <>\n            <h2>Contacts</h2>\n            <p>Contacts list is empty. Please, create new cotnact!</p>\n          </>\n        )}\n        {this.state.contacts.length > 1 && (\n          <Filter state={this.state} handleFilter={this.handleFilter} />\n        )}\n        <ContactList\n          filteredContacts={this.getFilteredContact()}\n          deleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}